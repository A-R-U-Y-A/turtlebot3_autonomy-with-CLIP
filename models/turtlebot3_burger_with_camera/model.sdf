<?xml version="1.0" ?>
<sdf version="1.6">
  <model name="turtlebot3_burger_with_camera">
    
    <link name="base_footprint"/>

    <link name="base_link">
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <mass>8.2573504e-01</mass>
        <inertia>
          <ixx>2.2124416e-03</ixx>
          <ixy>-1.2294101e-05</ixy>
          <ixz>3.4938785e-05</ixz>
          <iyy>2.1193702e-03</iyy>
          <iyz>-5.0120904e-06</iyz>
          <izz>2.0064271e-03</izz>
        </inertia>
      </inertial>

      <collision name="base_collision">
        <pose>-0.032 0 0.070 0 0 0</pose>
        <geometry>
          <box>
            <size>0.140 0.140 0.143</size>
          </box>
        </geometry>
      </collision>

      <visual name="base_visual">
        <pose>-0.032 0 0.0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>package://turtlebot3_gazebo/models/turtlebot3_common/meshes/bases/burger_base.stl</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/DarkGrey</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>

    <joint name="base_joint" type="fixed">
      <parent>base_footprint</parent>
      <child>base_link</child>
      <pose>0.0 0.0 0.010 0 0 0</pose>
    </joint>

    <link name="wheel_left_link">
      <pose>0.0 0.08 0.023 -1.57 0 0</pose>
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <mass>2.8498940e-02</mass>
        <inertia>
          <ixx>1.1175580e-05</ixx>
          <ixy>-4.2369783e-11</ixy>
          <ixz>-5.9381719e-09</ixz>
          <iyy>1.1192413e-05</iyy>
          <iyz>-1.4400107e-11</iyz>
          <izz>2.0712558e-05</izz>
        </inertia>
      </inertial>

      <collision name="wheel_left_collision">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.033</radius>
            <length>0.018</length>
          </cylinder>
        </geometry>
      </collision>

      <visual name="wheel_left_visual">
        <pose>0 0 0 1.57 0 0</pose>
        <geometry>
          <mesh>
            <uri>package://turtlebot3_gazebo/models/turtlebot3_common/meshes/wheels/left_tire.stl</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/FlatBlack</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>

    <joint name="wheel_left_joint" type="revolute">
      <parent>base_link</parent>
      <child>wheel_left_link</child>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <link name="wheel_right_link">
      <pose>0.0 -0.080 0.023 -1.57 0 0</pose>
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <mass>2.8498940e-02</mass>
        <inertia>
          <ixx>1.1175580e-05</ixx>
          <ixy>-4.2369783e-11</ixy>
          <ixz>-5.9381719e-09</ixz>
          <iyy>1.1192413e-05</iyy>
          <iyz>-1.4400107e-11</iyz>
          <izz>2.0712558e-05</izz>
        </inertia>
      </inertial>

      <collision name="wheel_right_collision">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.033</radius>
            <length>0.018</length>
          </cylinder>
        </geometry>
      </collision>

      <visual name="wheel_right_visual">
        <pose>0 0 0 1.57 0 0</pose>
        <geometry>
          <mesh>
            <uri>package://turtlebot3_gazebo/models/turtlebot3_common/meshes/wheels/right_tire.stl</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/FlatBlack</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>

    <joint name="wheel_right_joint" type="revolute">
      <parent>base_link</parent>
      <child>wheel_right_link</child>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <link name="caster_back_link">
      <pose>-0.081 0 -0.004 -1.57 0 0</pose>
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <mass>0.005</mass>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>0.001</iyy>
          <iyz>0.0</iyz>
          <izz>0.001</izz>
        </inertia>
      </inertial>

      <collision name="caster_back_collision">
        <pose>0 0.001 0 0 0 0</pose>
        <geometry>
          <box>
            <size>0.030 0.009 0.020</size>
          </box>
        </geometry>
      </collision>
    </link>

    <joint name="caster_back_joint" type="fixed">
      <parent>base_link</parent>
      <child>caster_back_link</child>
    </joint>

    <link name="imu_link">
      <pose>-0.032 0 0.068 0 0 0</pose>
    </link>

    <joint name="imu_joint" type="fixed">
      <parent>base_link</parent>
      <child>imu_link</child>
    </joint>

    <link name="base_scan">
      <pose>-0.032 0 0.172 0 0 0</pose>
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <mass>0.114</mass>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>0.001</iyy>
          <iyz>0.0</iyz>
          <izz>0.001</izz>
        </inertia>
      </inertial>

      <collision name="lidar_sensor_collision">
        <pose>0.015 0 -0.0065 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.055</radius>
            <length>0.0315</length>
          </cylinder>
        </geometry>
      </collision>

      <visual name="lidar_sensor_visual">
        <pose>0 0 0.0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>package://turtlebot3_gazebo/models/turtlebot3_common/meshes/sensors/lds.stl</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/FlatBlack</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>

      <sensor name="hls_lfcd_lds" type="ray">
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>5</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>6.28319</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.120</min>
            <max>3.5</max>
            <resolution>0.015</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>base_scan</frame_name>
        </plugin>
      </sensor>
    </link>

    <joint name="scan_joint" type="fixed">
      <parent>base_link</parent>
      <child>base_scan</child>
    </joint>

    <!-- Camera link -->
    <link name="camera_link">
      <pose>0.073 0 0.084 0 0 0</pose>
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <mass>0.035</mass>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>0.001</iyy>
          <iyz>0.0</iyz>
          <izz>0.001</izz>
        </inertia>
      </inertial>

      <collision name="camera_collision">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <box>
            <size>0.025 0.025 0.025</size>
          </box>
        </geometry>
      </collision>

      <visual name="camera_visual">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <box>
            <size>0.025 0.025 0.025</size>
          </box>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Blue</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>

      <!-- Camera sensor -->
      <sensor name="camera" type="camera">
        <pose>0 0 0 0 0 0</pose>
        <camera>
          <horizontal_fov>1.0472</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <visualize>true</visualize>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <ros>
            <remapping>image_raw:=/camera/image_raw</remapping>
            <remapping>camera_info:=/camera/camera_info</remapping>
          </ros>
          <camera_name>camera</camera_name>
          <frame_name>camera_optical_frame</frame_name>
          <hack_baseline>0.07</hack_baseline>
        </plugin>
      </sensor>
    </link>

    <joint name="camera_joint" type="fixed">
      <parent>base_link</parent>
      <child>camera_link</child>
    </joint>

    <!-- Camera optical frame -->
    <link name="camera_optical_frame">
      <pose>0 0 0 -1.5708 0 -1.5708</pose>
    </link>

    <joint name="camera_optical_joint" type="fixed">
      <parent>camera_link</parent>
      <child>camera_optical_frame</child>
    </joint>

    <!-- Differential drive plugin -->
    <plugin name="turtlebot3_diff_drive" filename="libgazebo_ros_diff_drive.so">
      <ros>
        <remapping>cmd_vel:=cmd_vel</remapping>
        <remapping>odom:=odom</remapping>
      </ros>

      <update_rate>30</update_rate>

      <!-- wheels -->
      <left_joint>wheel_left_joint</left_joint>
      <right_joint>wheel_right_joint</right_joint>

      <!-- kinematics -->
      <wheel_separation>0.160</wheel_separation>
      <wheel_diameter>0.066</wheel_diameter>

      <!-- limits -->
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>

      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>
    </plugin>

    <!-- IMU plugin -->
    <plugin name="turtlebot3_imu" filename="libgazebo_ros_imu_sensor.so">
      <ros>
        <remapping>~/out:=imu</remapping>
      </ros>
      <body_name>imu_link</body_name>
      <update_rate>200</update_rate>
      <gaussian_noise>0.0</gaussian_noise>
      <xyz_offset>0 0 0</xyz_offset>
      <rpy_offset>0 0 0</rpy_offset>
      <frame_name>imu_link</frame_name>
      <initial_orientation_as_reference>false</initial_orientation_as_reference>
    </plugin>

    <!-- Joint state publisher -->
    <plugin name="turtlebot3_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>250</update_rate>
      <joint_name>wheel_left_joint</joint_name>
      <joint_name>wheel_right_joint</joint_name>
    </plugin>

  </model>
</sdf>